
import { GoogleGenAI } from "@google/genai";
import { GenerationParams } from "./apiService";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
    throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

export const generateImages = async (
    params: GenerationParams
): Promise<string[]> => {
    const { prompt, negativePrompt, aspectRatio, seed, numberOfImages } = params;
    try {
        const config: {
            numberOfImages: number;
            outputMimeType: 'image/jpeg';
            aspectRatio: '1:1' | '3:4' | '4:3' | '9:16' | '16:9';
            negativePrompt?: string;
            seed?: number;
        } = {
            numberOfImages: numberOfImages || 1,
            outputMimeType: 'image/jpeg',
            aspectRatio: aspectRatio || '1:1',
        };

        if (negativePrompt) {
            config.negativePrompt = negativePrompt;
        }
        if (seed !== undefined && !isNaN(seed)) {
            config.seed = seed;
        }

        const response = await ai.models.generateImages({
            model: 'imagen-3.0-generate-002',
            prompt: prompt,
            config: config,
        });

        if (response.generatedImages && response.generatedImages.length > 0) {
            return response.generatedImages.map(img => `data:image/jpeg;base64,${img.image.imageBytes}`);
        } else {
            throw new Error("No images were generated by the API.");
        }
    } catch (error) {
        console.error("Error generating image:", error);
        if (error instanceof Error) {
            throw new Error(`Failed to generate image: ${error.message}`);
        }
        throw new Error("An unknown error occurred during image generation.");
    }
};
